import org.springframework.boot.gradle.tasks.run.BootRun

buildscript {
    ext {
        //spring boot 版本
        bootVersion = '2.3.1.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${bootVersion}")
    }
}

////打包源码
//task sourceJar(type: Jar) {
//    from sourceSets.main.allJava
//}

allprojects {
    //导入使用的插件
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    //这个插件用于发布jar包到私服
    apply plugin: 'maven-publish'

    //jdk编译版本
    sourceCompatibility = 1.8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //jar包的group ，version配置
    group 'com.pcc'
    version '1.0.0-SNAPSHOT'

    //私服地址，
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    /**
     * 导入了springboot,spring cloud的pom文件，能够免去自己管理版本
     */
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${bootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2"
        }
    }

    //私服发布配置
    publishing {
        publications {
            publishJarProject(MavenPublication) {
                //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
                groupId = project.group
                artifactId = project.name
                version = project.version
                //如果是war包填写components.web，如果是jar包填写components.java
                from components.java
                //配置上传源码
//                artifact  sourceJar {
//                    classifier "sources"
//                }

            }
        }

        repositories {
            maven {
                def releasesUrl = "http://你的私服ip:8081/repository/maven-releases/"
                def snapshotsUrl = "http://你的私服ip:8081/repository/maven-snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsUrl : releasesUrl
                credentials {
                    username = 'admin'
                    password = 'admin123'
                }
            }
        }
    }
}


//子项目配置
subprojects {

    dependencies {
        testCompile("org.springframework.boot:spring-boot-starter-test",
                "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.2")

        compile("com.google.guava:guava:28.0-jre",
                "org.springframework:spring-jdbc:4.0.5.RELEASE",
                "org.springframework.boot:spring-boot-starter-web",
                "cn.hutool:hutool-all:5.3.8",
                "com.alibaba:druid-spring-boot-starter:1.1.17",
                "mysql:mysql-connector-java:5.1.24",
                "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2",
        )

    }

}

task production(type: BootRun)  {
    classpath = sourceSets.main.runtimeClasspath
    main= 's.Application'
    systemProperty 'spring.profiles.active', 'prd'
}

task boottest(type: BootRun)  {
    classpath = sourceSets.main.runtimeClasspath
    main= 's.Application'
    systemProperty 'spring.profiles.active', 'test'
}

task dev(type: BootRun)  {
    classpath = sourceSets.main.runtimeClasspath
    main= 'DemoWebApplication'
    systemProperty 'spring.profiles.active', 'dev'
}



