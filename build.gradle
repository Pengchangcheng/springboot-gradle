group 'com.pcc'
version '1.0.0-SNAPSHOT'

buildscript {
    ext {
        //spring boot 版本
        bootVersion = '2.1.5.RELEASE'
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${bootVersion}" as Object)
    }
}


//所有项目共享的配置
allprojects {
    apply plugin: 'idea'
    apply plugin: 'java-library'
    version = '1.0.0'
    //jdk版本
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


//子项目配置
subprojects {
    version = '1.0.0'
    //声明java插件
    //Gradle默认会从src/main/java 搜寻打包源码，在src/test/java下搜寻测试源码。
    //并且src/main/resources下的所有文件按都会被打包，所有src/test/resources下的文件都会被添加到类路径用以执行测试。
    //所有文件都输出到build下，打包的文件输出到build/libs下。
    apply plugin: 'java'
    //使用springboot插件
    apply plugin: 'org.springframework.boot'
    //java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    //私服地址，
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-web'

//        testCompile("org.springframework.boot:spring-boot-starter-test",
//                "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:1.3.2")
//
//        compile("org.springframework:spring-jdbc:4.0.5.RELEASE",
//                "org.springframework.boot:spring-boot-starter-web",
//                "cn.hutool:hutool-all:5.3.8",
//                "com.alibaba:druid-spring-boot-starter:1.1.17",
//                "mysql:mysql-connector-java:5.1.24",
//                "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2",
//        )
    }
}

//编译时控制台乱码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

//在Gradle中jar包通常被发布到某个仓库中。下面将jar包发布到本地目录。也可以发布到远程仓库或多个远程仓库中。
uploadArchives {
    repositories {
        flatDir {
            dirs 'D:\\'
        }
    }
}

//构建命令说明
//build 构建整个项目
//clean 删除 build 目录以及所有构建完成的文件。
//assemble 编译并打包 jar 文件，但不会执行单元测试。一些其他插件可能会增强这个任务的功能。例如，如果采用了 War 插件，这个任务便会为你的项目打出 War 包。
//check 编译并测试代码。一些其他插件也可能会增强这个任务的功能。例如，如果采用了 Code-quality 插件，这个任务会额外执行 Checkstyle。


